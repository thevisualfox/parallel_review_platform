/**
 * Button
 *
 */

.btn {
    text-decoration: none;

    // Active state

    @at-root {
        a#{&}:active {
            box-shadow: none !important;
        }
    }
}

.btn__loader {
    @extend %absolute-fill;
}

.btn-link {
    font-weight: $font-weight-base;
    font-size: $font-size-base;
    padding: 0;
    border: none;

    &:hover,
    &:focus {
        text-decoration: underline;
        color: $white;
    }
}

// Button states

@each $color, $value in $theme-colors {
    .btn-#{$color} {
        @include button-variant(rgba($value, $opacity-level), transparent, rgba($value, $opacity-level), rgba($value, $opacity-level-active-border), rgba($value, 0.25), rgba($value, $opacity-level-active-border));

        color: $value !important;
    }

    .btn-outline-#{$color} {
        @include button-outline-variant(rgba($value, $opacity-level), $value, rgba($value, 0.1), rgba($value, $opacity-level-active-border));

        color: $value !important;

        &:hover {
            background-color: transparent;
        }

        &:focus {
            border-color: rgba($value, $opacity-level-active-border);
        }
    }
}

// Button sizes

@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .btn#{$infix}-lg {
            @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
        }

        .btn#{$infix}-sm {
            @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
        }
    }
}

.btn--project-add {
    position: fixed;
    right: spacer(12);
    bottom: spacer(12);
}
